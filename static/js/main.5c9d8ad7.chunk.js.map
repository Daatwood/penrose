{"version":3,"sources":["logo.svg","penrose.js","components/PenroseView.jsx","App.js","reportWebVitals.js","index.js"],"names":["penrose","canvas","offset","kiteColor","kiteColorInvert","dartColor","dartColorInvert","c","dpr","window","devicePixelRatio","g","getContext","fillStyle","fillRect","width","height","gap","r","Math","sqrt","pow","center","rr","console","log","perterb","es","angle","PI","push","sin","cos","liness","create_point_set","self","a","point_set","round","y","x","key","each","e","lines","M","pert","dot","b","trans","add","thin_rhombs","i","length","ii","lines_a","lines_b","ai","bi","line_intersect","seg1","seg2","e_scale","corners","ei","iii","sub","mul","floor","cc","save","diff","kites","t","to_rhomb","tan","ask","further","distSq","drawPoly","dx","v","p","tile_floor","o","cb","Array","k","hasOwnProperty","B","x1","y1","x2","y2","x3","y3","x4","y4","ua","ub","denom","color","beginPath","moveTo","lineTo","strokeStyle","fill","stroke","PenroseView","props","setState","abc","innerWidth","innerHeight","document","getElementById","style","position","left","top","c1","random","c2","c3","c4","c5","c6","Penrose","zIndex","id","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iMAAe,I,iCCAA,SAASA,EAAQC,EAAQC,EAAQC,EAAWC,EAAiBC,EAAWC,IAKvF,SAAoBC,EAAGL,EAAQC,EAAWC,EAAiBC,EAAWC,GACpE,IAAIE,EAAMC,OAAOC,iBAEjBR,EAAS,CAACA,EAAO,GAAKM,EAAKN,EAAO,GAAKM,GAEvC,IAAIG,EAAIJ,EAAEK,WAAW,MAErBD,EAAEE,UAAY,uBACdF,EAAEG,SAAS,EAAG,EAAGP,EAAEQ,MAAOR,EAAES,QAE5B,IAEIC,EAAQ,GAFRC,EAAIC,KAAKC,KAAKD,KAAKE,IAAId,EAAEQ,MAAM,EAAG,GAAKI,KAAKE,IAAId,EAAES,OAAO,EAAG,KAElD,GACVM,EAAS,CAACf,EAAEQ,MAAM,EAAGR,EAAES,OAAO,GAI9BO,EAAK,GAETC,QAAQC,IAAI,OAASF,GAIrB,IAHA,IAAIG,EAAUH,GAAMN,EAEhBU,EAAK,GACAC,EAAQ,EAAGA,EAAgB,EAART,KAAKU,GAAMD,GAAiB,EAART,KAAKU,GAAK,EACtDF,EAAGG,KAAK,EAAEX,KAAKY,IAAIH,GAAQT,KAAKa,IAAIJ,GAAQF,IAGhD,IAAIO,EAAS,GA4Bb,SAASC,IACL,IAAIC,EAAO,CACXA,UAAiB,GACjBA,IAAW,SAAUC,GACjBD,EAAKE,UAAUlB,KAAKmB,MAAa,IAAPF,EAAE,IAAgB,IAAMjB,KAAKmB,MAAa,IAAPF,EAAE,MAAiB,GAEpFD,IAAW,SAAUC,GACjB,IAAK,IAAIG,GAAK,EAAGA,GAAK,EAAGA,IACrB,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IAAK,CAC1B,IAAIC,EAAOtB,KAAKmB,MAAa,IAAPF,EAAE,IAAgBI,EAAK,KAAOrB,KAAKmB,MAAa,IAAPF,EAAE,IAAgBG,GACjF,GAAIJ,EAAKE,UAAUI,GAAM,OAAO,KAI5C,OAAON,EAzCXO,EAAKf,GAAI,SAAUgB,GACf,IAAIC,EAAQ,GACZX,EAAOH,KAAKc,GAOZ,IAJA,IAAIC,EAAI,CAACF,EAAE,IAAKA,EAAE,GAAIA,EAAE,GAAIA,EAAE,IAE1BG,GAASC,EAAIJ,EAAGzC,GAAQe,EAAO0B,EAAE,GAE5BJ,GAAKrB,EAAI4B,EAAMP,GAAKrB,EAAGqB,GAAKtB,EAAK,CACtC,IAAImB,EAAI,EAAElB,EAAGqB,GACTS,EAAI,CAAC9B,EAAGqB,GAEZH,EAAIa,EAAMb,EAAGS,GACbG,EAAIC,EAAMD,EAAGH,GACbT,EAAIc,EAAId,EAAGd,GACX0B,EAAIE,EAAIF,EAAG1B,GAEXsB,EAAMd,KAAK,CAACM,EAAGY,QA6BvB,IAHA,IAAIX,EAAYH,IACZiB,EAAc,GAETC,EAAI,EAAGA,EAAInB,EAAOoB,OAAQD,IAC/B,IAAK,IAAIE,EAAKF,EAAI,EAAGE,EAAKrB,EAAOoB,OAAQC,IAGrC,IAFA,IAAIC,EAAUtB,EAAOmB,GACjBI,EAAUvB,EAAOqB,GACZG,EAAK,EAAGA,EAAKF,EAAQF,OAAQI,IAClC,IAAK,IAAIC,EAAK,EAAGA,EAAKF,EAAQH,OAAQK,IAAM,CACxC,IAEIxC,EAFAkB,EAAImB,EAAQE,GACZT,EAAIQ,EAAQE,GAEhB,IADIxC,EAAIyC,EAAevB,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAIY,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAIA,EAAE,GAAG,KACrFY,MAAQ1C,EAAE2C,KAAM,CAMlB,IAFA,IAAIC,EAAU,GACVC,EAAU,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IAClCC,EAAK,EAAGA,EAAKrC,EAAG0B,OAAQW,IAAM,CACnC,IAAIrB,EAAIhB,EAAGqC,GACPC,GAAOlB,EAAIJ,EAAGO,EAAIgB,EAAI,CAAChD,EAAEsB,EAAGtB,EAAEqB,GAAIjB,GAASpB,IAAWyC,EAAE,IAAM1B,EAElE,GAAI+C,GAAMZ,EACNa,EAAM9C,KAAKmB,MAAM2B,GACjBF,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDC,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDG,GAAO,EACPF,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDC,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,SAC7C,GAAIE,GAAMV,EACbW,EAAM9C,KAAKmB,MAAM2B,GACjBF,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDC,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDG,GAAO,EACPF,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,IAChDC,EAAQ,GAAKb,EAAIa,EAAQ,GAAII,EAAIxB,EAAGsB,EAAMhD,EAAM6C,QAC7C,CACHG,EAAM9C,KAAKiD,MAAMH,GACjB,IAAK,IAAII,EAAK,EAAGA,EAAK,EAAGA,IACrBN,EAAQM,GAAMnB,EAAIa,EAAQM,GAAKF,EAAIxB,EAAGsB,EAAMhD,EAAM6C,KAI9DpB,EAAKqB,GAAS,SAAUxD,EAAG6C,GACvBW,EAAQX,GAAKF,EAAIgB,EAAI3D,EAAGL,GAASoB,MAGrC,IAAIgD,EAAOP,EAAQ,GACnBA,EAAQ,GAAKA,EAAQ,GACrBA,EAAQ,GAAKO,EAEb,IAAIC,GAASnB,EAAIE,EAAM,GAAK,EAChB,GAARiB,GAAqB,GAARA,EAGbpB,EAAYrB,KAAKiC,GAIjBrB,EAAKqB,GAAS,SAAUxD,GACpB8B,EAAUa,IAAI3C,OAa1C,IAAIiE,EAAQtC,IAEZQ,EAAKS,GAAa,SAAUsB,EAAGrB,GAC3B,SAASsB,EAASlC,GACd,IAAIJ,EAAI8B,EAAIO,EAAE,GAAIA,EAAE,IAEpB,OAAOvB,EADPd,EAAIa,EAAMT,EAAG,CAACJ,EAAE,GAAIA,EAAE,IAAKA,EAAE,GAAIA,EAAE,KACrBqC,EAAE,IAgCpB,IAAIrC,EAAIsC,EAAS,CAAC,GAAI,GAAKvD,KAAKwD,IAAI,IAAOxD,KAAKU,GAAG,KACnD,GAAIQ,EAAUuC,IAAIxC,GAAI,CAClB,IAAIyC,EAAU,KACVC,EAAOL,EAAE,GAAIrC,GAAK0C,EAAOL,EAAE,GAAIrC,IAC/BqC,EAAE,GAAKrC,EACPyC,EAAUJ,EAAE,KAEZA,EAAE,GAAKrC,EACPyC,EAAUJ,EAAE,IAEhBM,EAASpE,EAAG8D,EAAGtE,GAEf,IAAI6E,EAAK,GAAK7D,KAAKY,IAAI,GAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GACjE,GAAIQ,EAAUuC,IAAIF,EAAS,CAAC,GAAKM,GAAK,GAAG7D,KAAKa,IAAI,GAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAK,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,QAC9I2C,EAAMI,IAAIH,EAAE,IAAK,CAClBD,EAAMtB,IAAIuB,EAAE,IAEZ,IAAIQ,EAAI,CAAC,GAAG9D,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAI,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,IACrHqD,EAAI,CAACT,EAAE,GAAII,EAASH,EAAS,EAAEO,EAAE,IAAKA,EAAE,KAAMP,EAAS,EAAEO,EAAE,GAAIA,EAAE,MACrEF,EAASpE,EAAGuE,EAAG7E,GAGvB,GAAIgC,EAAUuC,IAAIF,EAAS,CAAC,GAAKM,GAAK,GAAG7D,KAAKa,IAAI,GAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAK,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,QAC9I2C,EAAMI,IAAIH,EAAE,IAAK,CAClBD,EAAMtB,IAAIuB,EAAE,IAERQ,EAAI,CAAC,EAAI,GAAG9D,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAI,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,IACzHqD,EAAI,CAACT,EAAE,GAAII,EAASH,EAAS,CAACO,EAAE,IAAKA,EAAE,KAAMP,EAAS,CAACO,EAAE,GAAIA,EAAE,MACnEF,EAASpE,EAAGuE,EAAG5E,QAIpB,CACC8B,EAAIsC,EAAS,CAAC,IAAK,GAAKvD,KAAKwD,IAAI,IAAOxD,KAAKU,GAAG,KACpD,GAAIQ,EAAUuC,IAAIxC,GAAI,CACdyC,EAAU,KACVC,EAAOL,EAAE,GAAIrC,GAAK0C,EAAOL,EAAE,GAAIrC,IAC/BqC,EAAE,GAAKrC,EACPyC,EAAUJ,EAAE,KAEZA,EAAE,GAAKrC,EACPyC,EAAUJ,EAAE,IAGhBM,EAASpE,EAAG8D,EAAGrE,GAEX4E,EAAK,GAAK7D,KAAKY,IAAI,GAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GACjE,GAAIQ,EAAUuC,IAAIF,EAAS,CAAC,GAAKM,EAAI,GAAG7D,KAAKa,IAAI,GAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAK,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,QAC7I2C,EAAMI,IAAIH,EAAE,IAAK,CAClBD,EAAMtB,IAAIuB,EAAE,IAERQ,EAAI,CAAC,GAAG9D,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAI,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,IACrHqD,EAAI,CAACT,EAAE,GAAII,EAASH,EAAS,EAAEO,EAAE,GAAIA,EAAE,KAAMP,EAAS,EAAEO,EAAE,IAAKA,EAAE,MACrEF,EAASpE,EAAGuE,EAAG7E,GAGvB,GAAIgC,EAAUuC,IAAIF,EAAS,CAAC,GAAKM,EAAI,GAAG7D,KAAKa,IAAI,GAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAK,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,QAC7I2C,EAAMI,IAAIH,EAAE,IAAK,CAClBD,EAAMtB,IAAIuB,EAAE,IAERQ,EAAI,CAAC,EAAI,GAAG9D,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,GAAI,GAAGV,KAAKY,IAAI,IAAOZ,KAAKU,GAAG,GAAGV,KAAKa,IAAI,IAAOb,KAAKU,GAAG,IACzHqD,EAAI,CAACT,EAAE,GAAII,EAASH,EAAS,CAACO,EAAE,GAAIA,EAAE,KAAMP,EAAS,CAACO,EAAE,IAAKA,EAAE,MACnEF,EAASpE,EAAGuE,EAAG5E,SAzPnC6E,CAAWlF,EAAQC,EAAQC,EAAWC,EAAiBC,EAAWC,GAmQpE,IAAIoC,EAAO,SAAU0C,EAAGC,GACvB,GAAID,aAAaE,OAChB,IAAK,IAAIlC,EAAI,EAAGA,EAAIgC,EAAE/B,OAAQD,IAC7B,GAAsB,GAAlBiC,EAAGD,EAAEhC,GAAIA,EAAGgC,GACf,OAAO,OAGT,IAAK,IAAIG,KAAKH,EACb,GAAIA,EAAEI,eAAeD,IACE,GAAlBF,EAAGD,EAAEG,GAAIA,EAAGH,GACf,OAAO,EAIX,OAAO,GAKR,SAASN,EAAO1C,EAAGY,GACjB,IAAIR,EAAI0B,EAAI9B,EAAGY,GACf,OAAOD,EAAIP,EAAGA,GAGhB,SAAS2B,EAAI/B,EAAGY,GACd,MAAO,CAACZ,EAAE,GAAKY,EAAGZ,EAAE,GAAKY,GAG3B,SAASD,EAAIX,EAAGY,GACd,OAAOZ,EAAE,GAAKY,EAAE,GAAKZ,EAAE,GAAKY,EAAE,GAGhC,SAASkB,EAAI9B,EAAGY,GACd,MAAO,CAACZ,EAAE,GAAKY,EAAE,GAAIZ,EAAE,GAAKY,EAAE,IAGhC,SAASE,EAAId,EAAGY,GACd,MAAO,CAACZ,EAAE,GAAKY,EAAE,GAAIZ,EAAE,GAAKY,EAAE,IAGhC,SAASC,EAAMb,EAAGqD,GAChB,MAAO,CAACrD,EAAE,GAAKqD,EAAE,GAAKrD,EAAE,GAAKqD,EAAE,GAAIrD,EAAE,GAAKqD,EAAE,GAAKrD,EAAE,GAAKqD,EAAE,IAI5D,SAAS9B,EAAe+B,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAElD,IAAIC,EAAIC,EAAIC,GAASH,EAAKF,IAAKH,EAAKF,IAAOM,EAAKF,IAAKD,EAAKF,GAC1D,OAAa,GAATS,EACO,KAIJ,CACH5D,EAAGkD,GAHPQ,IAAOF,EAAKF,IAAKH,EAAKI,IAAOE,EAAKF,IAAKL,EAAKI,IAAKM,IAGjCR,EAAKF,GACjBnD,EAAGoD,EAAKO,GAAIL,EAAKF,GACjB/B,KAAMsC,GAAM,GAAKA,GAAM,EACvBrC,MALJsC,IAAOP,EAAKF,IAAKC,EAAKI,IAAOF,EAAKF,IAAKD,EAAKI,IAAKM,IAKjC,GAAKD,GAAM,GAI7B,SAASpB,EAASpE,EAAGuE,EAAGmB,GACtB1F,EAAE2F,YACF5D,EAAKwC,GAAG,SAAUD,EAAG7B,GACR,GAALA,EAAQzC,EAAE4F,OAAOtB,EAAE,GAAIA,EAAE,IACxBtE,EAAE6F,OAAOvB,EAAE,GAAIA,EAAE,OAE1BtE,EAAE6F,OAAOtB,EAAE,GAAG,GAAIA,EAAE,GAAG,IACvBvE,EAAE8F,YAAc,QAChB9F,EAAEE,UAAYwF,EACd1F,EAAE+F,OACF/F,EAAEgG,S,WC1RWC,E,kDA7Cb,WAAYC,GAAO,IAAD,sBAChB,cAAMA,GACN,IAAIrG,EAAMC,OAAOC,iBAFD,OAGhB,EAAKoG,SAAW,CACdtG,IAAKA,EACLuG,IAAK,EACLhG,MAAON,OAAOuG,WACdhG,OAAQP,OAAOwG,YAEf/G,OAAQ,CAAC,EAAG,IATE,E,qDAalB,WACE,IAAID,EAASiH,SAASC,eAAe,WACrClH,EAAOmH,MAAMC,SAAW,WACxBpH,EAAOmH,MAAME,KAAO,MACpBrH,EAAOmH,MAAMG,IAAM,MACnBtH,EAAOmH,MAAMrG,MAAQN,OAAOuG,WAC5B/G,EAAOmH,MAAMpG,OAASP,OAAOwG,YAC7BhH,EAAOc,MAAQN,OAAOuG,WAAavG,OAAOC,iBAC1CT,EAAOe,OAASP,OAAOwG,YAAcxG,OAAOC,iBAC5C,IAAI8G,EAAqB,IAAhBrG,KAAKsG,SACVC,EAAqB,IAAhBvG,KAAKsG,SACVE,EAAqB,IAAhBxG,KAAKsG,SACVG,EAAqB,IAAhBzG,KAAKsG,SACVI,EAAqB,IAAhB1G,KAAKsG,SACVK,EAAqB,IAAhB3G,KAAKsG,SAKdM,EAAQ9H,EAAQ,CAAC,EAAG,GAJP,eAAiBuH,EAAjB,aAAwBE,EAAxB,aAA+BC,EAA/B,QACM,eAAWA,EAAX,aAAkBD,EAAlB,aAAyBF,EAAzB,QACN,eAAiBK,EAAjB,aAAwBD,EAAxB,aAA+BE,EAA/B,QACM,eAAWA,EAAX,aAAkBF,EAAlB,aAAyBC,EAAzB,W,oBAIrB,WACE,OAAQ,gCACN,oBAAIT,MAAO,CAACY,QAAS,GAArB,qBACA,wBAAQC,GAAG,mB,GAvCSC,aCOXC,MANf,WACE,OACE,cAAC,EAAD,KCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BiB,M","file":"static/js/main.5c9d8ad7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default function penrose(canvas, offset, kiteColor, kiteColorInvert, dartColor, dartColorInvert) {\n  tile_floor(canvas, offset, kiteColor, kiteColorInvert, dartColor, dartColorInvert)\n}\n\n// src: https://dglittle.github.io/cdn/edit003.html#penrose007.html\nfunction tile_floor(c, offset, kiteColor, kiteColorInvert, dartColor, dartColorInvert) {\n  let dpr = window.devicePixelRatio;\n\n  offset = [offset[0] * dpr, offset[1] * dpr]\n  \n  var g = c.getContext('2d')\n  \n  g.fillStyle = 'rgba(255, 0, 255, 1)'\n  g.fillRect(0, 0, c.width, c.height)\n  \n  var r = Math.sqrt(Math.pow(c.width/2, 2) + Math.pow(c.height/2, 2))\n  //var r = Math.min(c.width, c.height) / 2\n  var gap = r*2/30\n  var center = [c.width/2, c.height/2]\n\n  // var rr = 0.6021310716578796 // Math.random() // -0.8013333924608401\n  // var rr = Math.random()\n  var rr = 0.2\n  // var rr = 0.45637382882929\n  console.log('rr: ' + rr)\n  var perterb = rr * -gap\n  \n  var es = []\n  for (var angle = 0; angle < Math.PI*2; angle += Math.PI*2/5) {\n      es.push([-Math.sin(angle), Math.cos(angle), perterb])\n  }\n  \n  var liness = []\n  each(es, function (e) {\n      var lines = []\n      liness.push(lines)\n      \n      // g.beginPath()\n      var M = [e[1], -e[0], e[0], e[1]]\n      \n      var pert = -(dot(e, offset)%gap) + e[2]\n  \n      for (var y = -r + pert; y <= r; y += gap) {\n          var a = [-r, y]\n          var b = [r, y]\n  \n          a = trans(a, M)\n          b = trans(b, M)\n          a = add(a, center)\n          b = add(b, center)\n          \n          lines.push([a, b])\n          \n          // g.moveTo(a[0], a[1])\n          // g.lineTo(b[0], b[1])\n      }\n      // g.strokeStyle = 'black'\n      // g.stroke()\n  })\n  \n  function create_point_set() {\n      var self = {}\n      self.point_set = {}\n      self.add = function (a) {\n          self.point_set[Math.round(a[0] * 1000000) + ',' + Math.round(a[1] * 1000000)] = true\n      }\n      self.ask = function (a) {\n          for (var y = -1; y <= 1; y++) {\n              for (var x = -1; x <= 1; x++) {\n                  var key = (Math.round(a[0] * 1000000) + x) + ',' + (Math.round(a[1] * 1000000) + y)\n                  if (self.point_set[key]) return true\n              }\n          }\n      }\n      return self\n  }\n  \n  var point_set = create_point_set()\n  var thin_rhombs = []\n  \n  for (var i = 0; i < liness.length; i++) {\n      for (var ii = i + 1; ii < liness.length; ii++) {\n          var lines_a = liness[i]\n          var lines_b = liness[ii]\n          for (var ai = 0; ai < lines_a.length; ai++) {\n              for (var bi = 0; bi < lines_b.length; bi++) {\n                  var a = lines_a[ai]\n                  var b = lines_b[bi]\n                  var r = line_intersect(a[0][0], a[0][1], a[1][0], a[1][1], b[0][0], b[0][1], b[1][0], b[1][1])\n                  if (r.seg1 && r.seg2) {\n                      // g.fillStyle = 'red'\n                      // g.fillRect(r.x, r.y, 3, 3)\n                      \n                      var e_scale = 0.4\n                      var corners = [[0, 0], [0, 0], [0, 0], [0, 0]]\n                      for (var ei = 0; ei < es.length; ei++) {\n                          var e = es[ei]\n                          var iii = (dot(e, add(sub([r.x, r.y], center), offset)) - e[2]) / gap\n                          \n                          if (ei == i) {\n                              iii = Math.round(iii)\n                              corners[0] = add(corners[0], mul(e, iii * gap * e_scale))\n                              corners[1] = add(corners[1], mul(e, iii * gap * e_scale))\n                              iii -= 1\n                              corners[2] = add(corners[2], mul(e, iii * gap * e_scale))\n                              corners[3] = add(corners[3], mul(e, iii * gap * e_scale))\n                          } else if (ei == ii) {\n                              iii = Math.round(iii)\n                              corners[0] = add(corners[0], mul(e, iii * gap * e_scale))\n                              corners[2] = add(corners[2], mul(e, iii * gap * e_scale))\n                              iii -= 1\n                              corners[1] = add(corners[1], mul(e, iii * gap * e_scale))\n                              corners[3] = add(corners[3], mul(e, iii * gap * e_scale))\n                          } else {\n                              iii = Math.floor(iii)\n                              for (var cc = 0; cc < 4; cc++) {\n                                  corners[cc] = add(corners[cc], mul(e, iii * gap * e_scale))\n                              }\n                          }\n                      }\n                      each(corners, function (c, i) {\n                          corners[i] = add(sub(c, offset), center)\n                      })\n  \n                      var save = corners[1]\n                      corners[1] = corners[0]\n                      corners[0] = save\n  \n                      var diff = ((i - ii) + 5) % 5\n                      if (diff == 2 || diff == 3) {\n                          // drawPoly(g, corners, 'rgba(0, 128, 255, 0.5)')\n                          \n                          thin_rhombs.push(corners)\n                      } else {\n                          // drawPoly(g, corners, 'rgba(255, 255, 0, 0.5)')\n                          \n                          each(corners, function (c) {\n                              point_set.add(c)\n                          })\n                      }\n                      \n                      // iiii++\n                      // if (iiii >= 1200)\n                      //     throw 'blah'\n                  }\n              }\n          }\n      }\n  }\n  \n  var kites = create_point_set()\n  \n  each(thin_rhombs, function (t, i) {\n      function to_rhomb(x) {\n          var a = sub(t[2], t[0])\n          a = trans(x, [a[0], a[1], -a[1], a[0]])\n          return add(a, t[0])\n      }\n      \n      \n      \n      \n              // var color = ''\n              // if (Math.random() < 0.3333) {\n              //     if (Math.random() < 0.5) {\n              //         color = 'rgba(255, ' + Math.floor(256 * Math.random()) + ', 0, 1)'\n              //     } else {\n              //         color = 'rgba(255, 0, ' + Math.floor(256 * Math.random()) + ', 1)'\n              //     }\n              // } else if (Math.random() < 0.5) {\n              //     if (Math.random() < 0.5) {\n              //         color = 'rgba(' + Math.floor(256 * Math.random()) + ', 255, 0, 1)'\n              //     } else {\n              //         color = 'rgba(0, 255, ' + Math.floor(256 * Math.random()) + ', 1)'\n              //     }\n              // } else {\n              //     if (Math.random() < 0.5) {\n              //         color = 'rgba(' + Math.floor(256 * Math.random()) + ', 0, 255, 1)'\n              //     } else {\n              //         color = 'rgba(0, ' + Math.floor(256 * Math.random()) + ', 255, 1)'\n              //     }\n              // }\n              \n\n\n      \n      \n      \n      var a = to_rhomb([.5, .5 * Math.tan(54/360*Math.PI*2)])\n      if (point_set.ask(a)) {\n          var further = null\n          if (distSq(t[1], a) > distSq(t[3], a)) {\n              t[3] = a\n              further = t[1]\n          } else {\n              t[1] = a\n              further = t[3]\n          }\n          drawPoly(g, t, kiteColor)\n  \n          var dx = .5 * Math.sin(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)\n          if (point_set.ask(to_rhomb([.5 - dx, -.5*Math.cos(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2) - .5*Math.sin(18/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]))) {\n              if (!kites.ask(t[0])) {\n                  kites.add(t[0])\n                  \n                  var v = [.5*Math.cos(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2), .5*Math.sin(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]\n                  var p = [t[0], further, to_rhomb([-v[0], -v[1]]), to_rhomb([-v[0], v[1]])]\n                  drawPoly(g, p, dartColor)\n              }\n          }\n          if (point_set.ask(to_rhomb([.5 + dx, -.5*Math.cos(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2) - .5*Math.sin(18/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]))) {\n              if (!kites.ask(t[2])) {\n                  kites.add(t[2])\n                  \n                  var v = [1 + .5*Math.cos(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2), .5*Math.sin(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]\n                  var p = [t[2], further, to_rhomb([v[0], -v[1]]), to_rhomb([v[0], v[1]])]\n                  drawPoly(g, p, dartColorInvert)\n              }\n          }\n          \n      } else {\n          var a = to_rhomb([.5, -.5 * Math.tan(54/360*Math.PI*2)])\n          if (point_set.ask(a)) {\n              var further = null\n              if (distSq(t[1], a) > distSq(t[3], a)) {\n                  t[3] = a\n                  further = t[1]\n              } else {\n                  t[1] = a\n                  further = t[3]\n              }\n\n              drawPoly(g, t, kiteColorInvert)\n              \n              var dx = .5 * Math.sin(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)\n              if (point_set.ask(to_rhomb([.5 - dx, .5*Math.cos(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2) + .5*Math.sin(18/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]))) {\n                  if (!kites.ask(t[0])) {\n                      kites.add(t[0])\n                      \n                      var v = [.5*Math.cos(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2), .5*Math.sin(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]\n                      var p = [t[0], further, to_rhomb([-v[0], v[1]]), to_rhomb([-v[0], -v[1]])]\n                      drawPoly(g, p, dartColor)\n                  }\n              }\n              if (point_set.ask(to_rhomb([.5 + dx, .5*Math.cos(36/360*Math.PI*2)/Math.cos(18/360*Math.PI*2) + .5*Math.sin(18/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]))) {\n                  if (!kites.ask(t[2])) {\n                      kites.add(t[2])\n                      \n                      var v = [1 + .5*Math.cos(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2), .5*Math.sin(54/360*Math.PI*2)/Math.cos(18/360*Math.PI*2)]\n                      var p = [t[2], further, to_rhomb([v[0], v[1]]), to_rhomb([v[0], -v[1]])]\n                      drawPoly(g, p, dartColorInvert)\n                  }\n              }\n          }\n      }\n  })\n}\n\n// Helper function\n\nvar each = function (o, cb) {\n\tif (o instanceof Array) {\n\t\tfor (var i = 0; i < o.length; i++) {\n\t\t\tif (cb(o[i], i, o) == false)\n\t\t\t\treturn false\n\t\t}\n\t} else {\n\t\tfor (var k in o) {\n\t\t\tif (o.hasOwnProperty(k)) {\n\t\t\t\tif (cb(o[k], k, o) == false)\n\t\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\n\n// Helper functions\n\nfunction distSq(a, b) {\n  var x = sub(a, b)\n  return dot(x, x)\n}\n\nfunction mul(a, b) {\n  return [a[0] * b, a[1] * b]\n}\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1]\n}\n\nfunction sub(a, b) {\n  return [a[0] - b[0], a[1] - b[1]]\n}\n\nfunction add(a, b) {\n  return [a[0] + b[0], a[1] + b[1]]\n}\n\nfunction trans(a, B) {\n  return [a[0] * B[0] + a[1] * B[2], a[0] * B[1] + a[1] * B[3]]\n}\n\n// https://stackoverflow.com/questions/13937782/calculating-the-point-of-intersection-of-two-lines\nfunction line_intersect(x1, y1, x2, y2, x3, y3, x4, y4)\n{\n  var ua, ub, denom = (y4 - y3)*(x2 - x1) - (x4 - x3)*(y2 - y1);\n  if (denom == 0) {\n      return null;\n  }\n  ua = ((x4 - x3)*(y1 - y3) - (y4 - y3)*(x1 - x3))/denom;\n  ub = ((x2 - x1)*(y1 - y3) - (y2 - y1)*(x1 - x3))/denom;\n  return {\n      x: x1 + ua*(x2 - x1),\n      y: y1 + ua*(y2 - y1),\n      seg1: ua >= 0 && ua <= 1,\n      seg2: ub >= 0 && ub <= 1\n  };\n}\n\nfunction drawPoly(g, p, color) {\n  g.beginPath()\n  each(p, function (v, i) {\n      if (i == 0) g.moveTo(v[0], v[1])\n      else g.lineTo(v[0], v[1])\n  })\n  g.lineTo(p[0][0], p[0][1])\n  g.strokeStyle = 'white'\n  g.fillStyle = color\n  g.fill()\n  g.stroke()\n}\n\nfunction drawPolyNoBorder(g, p, color) {\n  g.beginPath()\n  each(p, function (v, i) {\n      if (i == 0) g.moveTo(v[0], v[1])\n      else g.lineTo(v[0], v[1])\n  })\n  g.lineTo(p[0][0], p[0][1])\n  g.fillStyle = color\n  g.fill()\n}\n\nfunction cap(t, mi, ma) {\n  if (t < mi) return mi\n  if (t > ma) return ma\n  return t\n}\n\nfunction lerp(t0, v0, t1, v1, t) {\n  return (t - t0) * (v1 - v0) / (t1 - t0) + v0\n}\n\nfunction getPos(e) {\n  var x = 0, y = 0\n  while (e != null) {\n      x += e.offsetLeft\n      y += e.offsetTop\n      e = e.offsetParent\n  }\n  return {x : x, y : x}\n}\n\nfunction getRelPos(to, positionedObject) {\n  var pos = getPos(to)\n  return {\n      x : positionedObject.pageX - pos.x,\n      y : positionedObject.pageY - pos.y\n  }\n}\n","import React, { Component } from 'react';\nimport Penrose from '../penrose'\n\nclass PenroseView extends Component {\n  constructor(props){\n    super(props)\n    let dpr = window.devicePixelRatio;\n    this.setState = {\n      dpr: dpr,\n      abc: 0,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      // canvas: canvas,\n      offset: [0, 0]\n    }\n  }\n\n  componentDidMount(){\n    let canvas = document.getElementById('penrose');\n    canvas.style.position = 'absolute'\n    canvas.style.left = '0px'\n    canvas.style.top = '0px'\n    canvas.style.width = window.innerWidth\n    canvas.style.height = window.innerHeight\n    canvas.width = window.innerWidth * window.devicePixelRatio\n    canvas.height = window.innerHeight * window.devicePixelRatio\n    let c1 = Math.random() * 255\n    let c2 = Math.random() * 255\n    let c3 = Math.random() * 255\n    let c4 = Math.random() * 255\n    let c5 = Math.random() * 255\n    let c6 = Math.random() * 255\n    var kiteColor =       `rgba(${c1}, ${c2}, ${c3}, 1)`\n    var kiteColorInvert = `rgba(${c3}, ${c2}, ${c1}, 1)`\n    var dartColor =       `rgba(${c5}, ${c4}, ${c6}, 1)`\n    var dartColorInvert = `rgba(${c6}, ${c4}, ${c5}, 1)`\n    Penrose(canvas, [0, 0], kiteColor, kiteColorInvert, dartColor, dartColorInvert)\n  }\n\n  render() {\n    return (<div>\n      <h1 style={{zIndex: -1}}>Penrose</h1>\n      <canvas id='penrose'/>\n    </div>\n    )\n\n  }\n\n}\nexport default PenroseView;","import logo from './logo.svg';\nimport './App.css';\nimport PenroseView from './components/PenroseView';\n\nfunction App() {\n  return (\n    <PenroseView/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}